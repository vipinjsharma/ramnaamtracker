// Generated by view binder compiler. Do not edit!
package com.ramlekhak.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ramlekhak.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSetReminderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnTimeAfternoon;

  @NonNull
  public final Button btnTimeEvening;

  @NonNull
  public final Button btnTimeMorning;

  @NonNull
  public final ImageView closeButton;

  @NonNull
  public final ToggleButton dayFri;

  @NonNull
  public final ToggleButton dayMon;

  @NonNull
  public final ToggleButton daySat;

  @NonNull
  public final ToggleButton daySun;

  @NonNull
  public final ToggleButton dayThu;

  @NonNull
  public final ToggleButton dayTue;

  @NonNull
  public final ToggleButton dayWed;

  @NonNull
  public final LinearLayout daysContainer;

  @NonNull
  public final View divider;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final LinearLayout quickTimeButtons;

  @NonNull
  public final TextView quickTimeSelectLabel;

  @NonNull
  public final TextView reminderDaysLabel;

  @NonNull
  public final TextView reminderNote;

  @NonNull
  public final Switch reminderSwitch;

  @NonNull
  public final LinearLayout reminderSwitchLayout;

  @NonNull
  public final TextView reminderTimeLabel;

  @NonNull
  public final Button saveReminderButton;

  @NonNull
  public final TextView selectedTime;

  @NonNull
  public final TextView titleText;

  private DialogSetReminderBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnTimeAfternoon, @NonNull Button btnTimeEvening,
      @NonNull Button btnTimeMorning, @NonNull ImageView closeButton, @NonNull ToggleButton dayFri,
      @NonNull ToggleButton dayMon, @NonNull ToggleButton daySat, @NonNull ToggleButton daySun,
      @NonNull ToggleButton dayThu, @NonNull ToggleButton dayTue, @NonNull ToggleButton dayWed,
      @NonNull LinearLayout daysContainer, @NonNull View divider,
      @NonNull LinearLayout headerLayout, @NonNull LinearLayout quickTimeButtons,
      @NonNull TextView quickTimeSelectLabel, @NonNull TextView reminderDaysLabel,
      @NonNull TextView reminderNote, @NonNull Switch reminderSwitch,
      @NonNull LinearLayout reminderSwitchLayout, @NonNull TextView reminderTimeLabel,
      @NonNull Button saveReminderButton, @NonNull TextView selectedTime,
      @NonNull TextView titleText) {
    this.rootView = rootView;
    this.btnTimeAfternoon = btnTimeAfternoon;
    this.btnTimeEvening = btnTimeEvening;
    this.btnTimeMorning = btnTimeMorning;
    this.closeButton = closeButton;
    this.dayFri = dayFri;
    this.dayMon = dayMon;
    this.daySat = daySat;
    this.daySun = daySun;
    this.dayThu = dayThu;
    this.dayTue = dayTue;
    this.dayWed = dayWed;
    this.daysContainer = daysContainer;
    this.divider = divider;
    this.headerLayout = headerLayout;
    this.quickTimeButtons = quickTimeButtons;
    this.quickTimeSelectLabel = quickTimeSelectLabel;
    this.reminderDaysLabel = reminderDaysLabel;
    this.reminderNote = reminderNote;
    this.reminderSwitch = reminderSwitch;
    this.reminderSwitchLayout = reminderSwitchLayout;
    this.reminderTimeLabel = reminderTimeLabel;
    this.saveReminderButton = saveReminderButton;
    this.selectedTime = selectedTime;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSetReminderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSetReminderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_set_reminder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSetReminderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_time_afternoon;
      Button btnTimeAfternoon = ViewBindings.findChildViewById(rootView, id);
      if (btnTimeAfternoon == null) {
        break missingId;
      }

      id = R.id.btn_time_evening;
      Button btnTimeEvening = ViewBindings.findChildViewById(rootView, id);
      if (btnTimeEvening == null) {
        break missingId;
      }

      id = R.id.btn_time_morning;
      Button btnTimeMorning = ViewBindings.findChildViewById(rootView, id);
      if (btnTimeMorning == null) {
        break missingId;
      }

      id = R.id.closeButton;
      ImageView closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.day_fri;
      ToggleButton dayFri = ViewBindings.findChildViewById(rootView, id);
      if (dayFri == null) {
        break missingId;
      }

      id = R.id.day_mon;
      ToggleButton dayMon = ViewBindings.findChildViewById(rootView, id);
      if (dayMon == null) {
        break missingId;
      }

      id = R.id.day_sat;
      ToggleButton daySat = ViewBindings.findChildViewById(rootView, id);
      if (daySat == null) {
        break missingId;
      }

      id = R.id.day_sun;
      ToggleButton daySun = ViewBindings.findChildViewById(rootView, id);
      if (daySun == null) {
        break missingId;
      }

      id = R.id.day_thu;
      ToggleButton dayThu = ViewBindings.findChildViewById(rootView, id);
      if (dayThu == null) {
        break missingId;
      }

      id = R.id.day_tue;
      ToggleButton dayTue = ViewBindings.findChildViewById(rootView, id);
      if (dayTue == null) {
        break missingId;
      }

      id = R.id.day_wed;
      ToggleButton dayWed = ViewBindings.findChildViewById(rootView, id);
      if (dayWed == null) {
        break missingId;
      }

      id = R.id.daysContainer;
      LinearLayout daysContainer = ViewBindings.findChildViewById(rootView, id);
      if (daysContainer == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.headerLayout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.quickTimeButtons;
      LinearLayout quickTimeButtons = ViewBindings.findChildViewById(rootView, id);
      if (quickTimeButtons == null) {
        break missingId;
      }

      id = R.id.quickTimeSelectLabel;
      TextView quickTimeSelectLabel = ViewBindings.findChildViewById(rootView, id);
      if (quickTimeSelectLabel == null) {
        break missingId;
      }

      id = R.id.reminderDaysLabel;
      TextView reminderDaysLabel = ViewBindings.findChildViewById(rootView, id);
      if (reminderDaysLabel == null) {
        break missingId;
      }

      id = R.id.reminderNote;
      TextView reminderNote = ViewBindings.findChildViewById(rootView, id);
      if (reminderNote == null) {
        break missingId;
      }

      id = R.id.reminder_switch;
      Switch reminderSwitch = ViewBindings.findChildViewById(rootView, id);
      if (reminderSwitch == null) {
        break missingId;
      }

      id = R.id.reminderSwitchLayout;
      LinearLayout reminderSwitchLayout = ViewBindings.findChildViewById(rootView, id);
      if (reminderSwitchLayout == null) {
        break missingId;
      }

      id = R.id.reminderTimeLabel;
      TextView reminderTimeLabel = ViewBindings.findChildViewById(rootView, id);
      if (reminderTimeLabel == null) {
        break missingId;
      }

      id = R.id.save_reminder_button;
      Button saveReminderButton = ViewBindings.findChildViewById(rootView, id);
      if (saveReminderButton == null) {
        break missingId;
      }

      id = R.id.selected_time;
      TextView selectedTime = ViewBindings.findChildViewById(rootView, id);
      if (selectedTime == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new DialogSetReminderBinding((ConstraintLayout) rootView, btnTimeAfternoon,
          btnTimeEvening, btnTimeMorning, closeButton, dayFri, dayMon, daySat, daySun, dayThu,
          dayTue, dayWed, daysContainer, divider, headerLayout, quickTimeButtons,
          quickTimeSelectLabel, reminderDaysLabel, reminderNote, reminderSwitch,
          reminderSwitchLayout, reminderTimeLabel, saveReminderButton, selectedTime, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
