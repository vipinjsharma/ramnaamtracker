// Generated by view binder compiler. Do not edit!
package com.ramlekhak.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ramlekhak.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogDailyReminderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView clockIcon;

  @NonNull
  public final ImageView closeButton;

  @NonNull
  public final LinearLayout dayOptionsContainer;

  @NonNull
  public final TextView descriptionText;

  @NonNull
  public final View divider;

  @NonNull
  public final CardView enableReminderCard;

  @NonNull
  public final TextView enableReminderText;

  @NonNull
  public final Button eveningButton;

  @NonNull
  public final Button everydayButton;

  @NonNull
  public final TextView fridaySelector;

  @NonNull
  public final TextView mondaySelector;

  @NonNull
  public final Button morningButton;

  @NonNull
  public final Button noonButton;

  @NonNull
  public final LinearLayout presetTimeContainer;

  @NonNull
  public final TextView reminderDaysLabel;

  @NonNull
  public final SwitchCompat reminderSwitch;

  @NonNull
  public final TextView reminderTimeLabel;

  @NonNull
  public final TextView saturdaySelector;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextView sundaySelector;

  @NonNull
  public final TextView thursdaySelector;

  @NonNull
  public final EditText timeInput;

  @NonNull
  public final FrameLayout timePickerContainer;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final TextView tuesdaySelector;

  @NonNull
  public final TextView wednesdaySelector;

  @NonNull
  public final LinearLayout weekdaySelectorContainer;

  @NonNull
  public final Button weekdaysButton;

  @NonNull
  public final Button weekendsButton;

  private DialogDailyReminderBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView clockIcon, @NonNull ImageView closeButton,
      @NonNull LinearLayout dayOptionsContainer, @NonNull TextView descriptionText,
      @NonNull View divider, @NonNull CardView enableReminderCard,
      @NonNull TextView enableReminderText, @NonNull Button eveningButton,
      @NonNull Button everydayButton, @NonNull TextView fridaySelector,
      @NonNull TextView mondaySelector, @NonNull Button morningButton, @NonNull Button noonButton,
      @NonNull LinearLayout presetTimeContainer, @NonNull TextView reminderDaysLabel,
      @NonNull SwitchCompat reminderSwitch, @NonNull TextView reminderTimeLabel,
      @NonNull TextView saturdaySelector, @NonNull Button saveButton,
      @NonNull TextView sundaySelector, @NonNull TextView thursdaySelector,
      @NonNull EditText timeInput, @NonNull FrameLayout timePickerContainer,
      @NonNull TextView titleText, @NonNull TextView tuesdaySelector,
      @NonNull TextView wednesdaySelector, @NonNull LinearLayout weekdaySelectorContainer,
      @NonNull Button weekdaysButton, @NonNull Button weekendsButton) {
    this.rootView = rootView;
    this.clockIcon = clockIcon;
    this.closeButton = closeButton;
    this.dayOptionsContainer = dayOptionsContainer;
    this.descriptionText = descriptionText;
    this.divider = divider;
    this.enableReminderCard = enableReminderCard;
    this.enableReminderText = enableReminderText;
    this.eveningButton = eveningButton;
    this.everydayButton = everydayButton;
    this.fridaySelector = fridaySelector;
    this.mondaySelector = mondaySelector;
    this.morningButton = morningButton;
    this.noonButton = noonButton;
    this.presetTimeContainer = presetTimeContainer;
    this.reminderDaysLabel = reminderDaysLabel;
    this.reminderSwitch = reminderSwitch;
    this.reminderTimeLabel = reminderTimeLabel;
    this.saturdaySelector = saturdaySelector;
    this.saveButton = saveButton;
    this.sundaySelector = sundaySelector;
    this.thursdaySelector = thursdaySelector;
    this.timeInput = timeInput;
    this.timePickerContainer = timePickerContainer;
    this.titleText = titleText;
    this.tuesdaySelector = tuesdaySelector;
    this.wednesdaySelector = wednesdaySelector;
    this.weekdaySelectorContainer = weekdaySelectorContainer;
    this.weekdaysButton = weekdaysButton;
    this.weekendsButton = weekendsButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogDailyReminderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogDailyReminderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_daily_reminder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogDailyReminderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clockIcon;
      ImageView clockIcon = ViewBindings.findChildViewById(rootView, id);
      if (clockIcon == null) {
        break missingId;
      }

      id = R.id.closeButton;
      ImageView closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.dayOptionsContainer;
      LinearLayout dayOptionsContainer = ViewBindings.findChildViewById(rootView, id);
      if (dayOptionsContainer == null) {
        break missingId;
      }

      id = R.id.descriptionText;
      TextView descriptionText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionText == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.enableReminderCard;
      CardView enableReminderCard = ViewBindings.findChildViewById(rootView, id);
      if (enableReminderCard == null) {
        break missingId;
      }

      id = R.id.enableReminderText;
      TextView enableReminderText = ViewBindings.findChildViewById(rootView, id);
      if (enableReminderText == null) {
        break missingId;
      }

      id = R.id.eveningButton;
      Button eveningButton = ViewBindings.findChildViewById(rootView, id);
      if (eveningButton == null) {
        break missingId;
      }

      id = R.id.everydayButton;
      Button everydayButton = ViewBindings.findChildViewById(rootView, id);
      if (everydayButton == null) {
        break missingId;
      }

      id = R.id.fridaySelector;
      TextView fridaySelector = ViewBindings.findChildViewById(rootView, id);
      if (fridaySelector == null) {
        break missingId;
      }

      id = R.id.mondaySelector;
      TextView mondaySelector = ViewBindings.findChildViewById(rootView, id);
      if (mondaySelector == null) {
        break missingId;
      }

      id = R.id.morningButton;
      Button morningButton = ViewBindings.findChildViewById(rootView, id);
      if (morningButton == null) {
        break missingId;
      }

      id = R.id.noonButton;
      Button noonButton = ViewBindings.findChildViewById(rootView, id);
      if (noonButton == null) {
        break missingId;
      }

      id = R.id.presetTimeContainer;
      LinearLayout presetTimeContainer = ViewBindings.findChildViewById(rootView, id);
      if (presetTimeContainer == null) {
        break missingId;
      }

      id = R.id.reminderDaysLabel;
      TextView reminderDaysLabel = ViewBindings.findChildViewById(rootView, id);
      if (reminderDaysLabel == null) {
        break missingId;
      }

      id = R.id.reminderSwitch;
      SwitchCompat reminderSwitch = ViewBindings.findChildViewById(rootView, id);
      if (reminderSwitch == null) {
        break missingId;
      }

      id = R.id.reminderTimeLabel;
      TextView reminderTimeLabel = ViewBindings.findChildViewById(rootView, id);
      if (reminderTimeLabel == null) {
        break missingId;
      }

      id = R.id.saturdaySelector;
      TextView saturdaySelector = ViewBindings.findChildViewById(rootView, id);
      if (saturdaySelector == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.sundaySelector;
      TextView sundaySelector = ViewBindings.findChildViewById(rootView, id);
      if (sundaySelector == null) {
        break missingId;
      }

      id = R.id.thursdaySelector;
      TextView thursdaySelector = ViewBindings.findChildViewById(rootView, id);
      if (thursdaySelector == null) {
        break missingId;
      }

      id = R.id.timeInput;
      EditText timeInput = ViewBindings.findChildViewById(rootView, id);
      if (timeInput == null) {
        break missingId;
      }

      id = R.id.timePickerContainer;
      FrameLayout timePickerContainer = ViewBindings.findChildViewById(rootView, id);
      if (timePickerContainer == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.tuesdaySelector;
      TextView tuesdaySelector = ViewBindings.findChildViewById(rootView, id);
      if (tuesdaySelector == null) {
        break missingId;
      }

      id = R.id.wednesdaySelector;
      TextView wednesdaySelector = ViewBindings.findChildViewById(rootView, id);
      if (wednesdaySelector == null) {
        break missingId;
      }

      id = R.id.weekdaySelectorContainer;
      LinearLayout weekdaySelectorContainer = ViewBindings.findChildViewById(rootView, id);
      if (weekdaySelectorContainer == null) {
        break missingId;
      }

      id = R.id.weekdaysButton;
      Button weekdaysButton = ViewBindings.findChildViewById(rootView, id);
      if (weekdaysButton == null) {
        break missingId;
      }

      id = R.id.weekendsButton;
      Button weekendsButton = ViewBindings.findChildViewById(rootView, id);
      if (weekendsButton == null) {
        break missingId;
      }

      return new DialogDailyReminderBinding((ConstraintLayout) rootView, clockIcon, closeButton,
          dayOptionsContainer, descriptionText, divider, enableReminderCard, enableReminderText,
          eveningButton, everydayButton, fridaySelector, mondaySelector, morningButton, noonButton,
          presetTimeContainer, reminderDaysLabel, reminderSwitch, reminderTimeLabel,
          saturdaySelector, saveButton, sundaySelector, thursdaySelector, timeInput,
          timePickerContainer, titleText, tuesdaySelector, wednesdaySelector,
          weekdaySelectorContainer, weekdaysButton, weekendsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
