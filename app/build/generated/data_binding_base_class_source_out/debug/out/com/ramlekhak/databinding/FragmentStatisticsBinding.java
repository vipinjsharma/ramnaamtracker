// Generated by view binder compiler. Do not edit!
package com.ramlekhak.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.ramlekhak.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStatisticsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final View dailyChart;

  @NonNull
  public final MaterialCardView dailyStatsCard;

  @NonNull
  public final View monthlyChart;

  @NonNull
  public final MaterialCardView monthlyStatsCard;

  @NonNull
  public final MaterialButton resetStatsButton;

  @NonNull
  public final View weeklyChart;

  @NonNull
  public final MaterialCardView weeklyStatsCard;

  private FragmentStatisticsBinding(@NonNull NestedScrollView rootView, @NonNull View dailyChart,
      @NonNull MaterialCardView dailyStatsCard, @NonNull View monthlyChart,
      @NonNull MaterialCardView monthlyStatsCard, @NonNull MaterialButton resetStatsButton,
      @NonNull View weeklyChart, @NonNull MaterialCardView weeklyStatsCard) {
    this.rootView = rootView;
    this.dailyChart = dailyChart;
    this.dailyStatsCard = dailyStatsCard;
    this.monthlyChart = monthlyChart;
    this.monthlyStatsCard = monthlyStatsCard;
    this.resetStatsButton = resetStatsButton;
    this.weeklyChart = weeklyChart;
    this.weeklyStatsCard = weeklyStatsCard;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStatisticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStatisticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_statistics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStatisticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.daily_chart;
      View dailyChart = ViewBindings.findChildViewById(rootView, id);
      if (dailyChart == null) {
        break missingId;
      }

      id = R.id.daily_stats_card;
      MaterialCardView dailyStatsCard = ViewBindings.findChildViewById(rootView, id);
      if (dailyStatsCard == null) {
        break missingId;
      }

      id = R.id.monthly_chart;
      View monthlyChart = ViewBindings.findChildViewById(rootView, id);
      if (monthlyChart == null) {
        break missingId;
      }

      id = R.id.monthly_stats_card;
      MaterialCardView monthlyStatsCard = ViewBindings.findChildViewById(rootView, id);
      if (monthlyStatsCard == null) {
        break missingId;
      }

      id = R.id.reset_stats_button;
      MaterialButton resetStatsButton = ViewBindings.findChildViewById(rootView, id);
      if (resetStatsButton == null) {
        break missingId;
      }

      id = R.id.weekly_chart;
      View weeklyChart = ViewBindings.findChildViewById(rootView, id);
      if (weeklyChart == null) {
        break missingId;
      }

      id = R.id.weekly_stats_card;
      MaterialCardView weeklyStatsCard = ViewBindings.findChildViewById(rootView, id);
      if (weeklyStatsCard == null) {
        break missingId;
      }

      return new FragmentStatisticsBinding((NestedScrollView) rootView, dailyChart, dailyStatsCard,
          monthlyChart, monthlyStatsCard, resetStatsButton, weeklyChart, weeklyStatsCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
