// Generated by view binder compiler. Do not edit!
package com.ramlekhak.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.ramlekhak.R;
import com.ramlekhak.utils.DrawingView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWritingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton autoDrawButton;

  @NonNull
  public final LinearLayout buttonsLayout;

  @NonNull
  public final MaterialButton clearButton;

  @NonNull
  public final MaterialCardView drawingBoardCard;

  @NonNull
  public final DrawingView drawingView;

  @NonNull
  public final MaterialButton submitButton;

  @NonNull
  public final TextView writingInstructions;

  private FragmentWritingBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton autoDrawButton, @NonNull LinearLayout buttonsLayout,
      @NonNull MaterialButton clearButton, @NonNull MaterialCardView drawingBoardCard,
      @NonNull DrawingView drawingView, @NonNull MaterialButton submitButton,
      @NonNull TextView writingInstructions) {
    this.rootView = rootView;
    this.autoDrawButton = autoDrawButton;
    this.buttonsLayout = buttonsLayout;
    this.clearButton = clearButton;
    this.drawingBoardCard = drawingBoardCard;
    this.drawingView = drawingView;
    this.submitButton = submitButton;
    this.writingInstructions = writingInstructions;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWritingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWritingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_writing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWritingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.auto_draw_button;
      MaterialButton autoDrawButton = ViewBindings.findChildViewById(rootView, id);
      if (autoDrawButton == null) {
        break missingId;
      }

      id = R.id.buttons_layout;
      LinearLayout buttonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonsLayout == null) {
        break missingId;
      }

      id = R.id.clear_button;
      MaterialButton clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.drawing_board_card;
      MaterialCardView drawingBoardCard = ViewBindings.findChildViewById(rootView, id);
      if (drawingBoardCard == null) {
        break missingId;
      }

      id = R.id.drawing_view;
      DrawingView drawingView = ViewBindings.findChildViewById(rootView, id);
      if (drawingView == null) {
        break missingId;
      }

      id = R.id.submit_button;
      MaterialButton submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.writing_instructions;
      TextView writingInstructions = ViewBindings.findChildViewById(rootView, id);
      if (writingInstructions == null) {
        break missingId;
      }

      return new FragmentWritingBinding((ConstraintLayout) rootView, autoDrawButton, buttonsLayout,
          clearButton, drawingBoardCard, drawingView, submitButton, writingInstructions);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
