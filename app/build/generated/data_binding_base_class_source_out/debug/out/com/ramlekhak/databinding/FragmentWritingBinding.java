// Generated by view binder compiler. Do not edit!
package com.ramlekhak.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.ramlekhak.R;
import com.ramlekhak.ui.drawing.DrawingView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWritingBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout actionsContainer;

  @NonNull
  public final MaterialButton autoDrawButton;

  @NonNull
  public final MaterialButton clearButton;

  @NonNull
  public final TextView dailyGoalValue;

  @NonNull
  public final ProgressBar dailyProgressBar;

  @NonNull
  public final CardView drawingCard;

  @NonNull
  public final DrawingView drawingView;

  @NonNull
  public final TextView goalPercentage;

  @NonNull
  public final CardView instructionCard;

  @NonNull
  public final ImageView setGoalButton;

  @NonNull
  public final MaterialButton shareProgressButton;

  @NonNull
  public final CardView statsCard;

  @NonNull
  public final TextView streakCountValue;

  @NonNull
  public final MaterialButton submitButton;

  @NonNull
  public final TextView todayCountValue;

  @NonNull
  public final TextView todayMalasValue;

  private FragmentWritingBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout actionsContainer, @NonNull MaterialButton autoDrawButton,
      @NonNull MaterialButton clearButton, @NonNull TextView dailyGoalValue,
      @NonNull ProgressBar dailyProgressBar, @NonNull CardView drawingCard,
      @NonNull DrawingView drawingView, @NonNull TextView goalPercentage,
      @NonNull CardView instructionCard, @NonNull ImageView setGoalButton,
      @NonNull MaterialButton shareProgressButton, @NonNull CardView statsCard,
      @NonNull TextView streakCountValue, @NonNull MaterialButton submitButton,
      @NonNull TextView todayCountValue, @NonNull TextView todayMalasValue) {
    this.rootView = rootView;
    this.actionsContainer = actionsContainer;
    this.autoDrawButton = autoDrawButton;
    this.clearButton = clearButton;
    this.dailyGoalValue = dailyGoalValue;
    this.dailyProgressBar = dailyProgressBar;
    this.drawingCard = drawingCard;
    this.drawingView = drawingView;
    this.goalPercentage = goalPercentage;
    this.instructionCard = instructionCard;
    this.setGoalButton = setGoalButton;
    this.shareProgressButton = shareProgressButton;
    this.statsCard = statsCard;
    this.streakCountValue = streakCountValue;
    this.submitButton = submitButton;
    this.todayCountValue = todayCountValue;
    this.todayMalasValue = todayMalasValue;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWritingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWritingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_writing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWritingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actions_container;
      LinearLayout actionsContainer = ViewBindings.findChildViewById(rootView, id);
      if (actionsContainer == null) {
        break missingId;
      }

      id = R.id.auto_draw_button;
      MaterialButton autoDrawButton = ViewBindings.findChildViewById(rootView, id);
      if (autoDrawButton == null) {
        break missingId;
      }

      id = R.id.clear_button;
      MaterialButton clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.daily_goal_value;
      TextView dailyGoalValue = ViewBindings.findChildViewById(rootView, id);
      if (dailyGoalValue == null) {
        break missingId;
      }

      id = R.id.daily_progress_bar;
      ProgressBar dailyProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (dailyProgressBar == null) {
        break missingId;
      }

      id = R.id.drawing_card;
      CardView drawingCard = ViewBindings.findChildViewById(rootView, id);
      if (drawingCard == null) {
        break missingId;
      }

      id = R.id.drawing_view;
      DrawingView drawingView = ViewBindings.findChildViewById(rootView, id);
      if (drawingView == null) {
        break missingId;
      }

      id = R.id.goal_percentage;
      TextView goalPercentage = ViewBindings.findChildViewById(rootView, id);
      if (goalPercentage == null) {
        break missingId;
      }

      id = R.id.instruction_card;
      CardView instructionCard = ViewBindings.findChildViewById(rootView, id);
      if (instructionCard == null) {
        break missingId;
      }

      id = R.id.set_goal_button;
      ImageView setGoalButton = ViewBindings.findChildViewById(rootView, id);
      if (setGoalButton == null) {
        break missingId;
      }

      id = R.id.share_progress_button;
      MaterialButton shareProgressButton = ViewBindings.findChildViewById(rootView, id);
      if (shareProgressButton == null) {
        break missingId;
      }

      id = R.id.stats_card;
      CardView statsCard = ViewBindings.findChildViewById(rootView, id);
      if (statsCard == null) {
        break missingId;
      }

      id = R.id.streak_count_value;
      TextView streakCountValue = ViewBindings.findChildViewById(rootView, id);
      if (streakCountValue == null) {
        break missingId;
      }

      id = R.id.submit_button;
      MaterialButton submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.today_count_value;
      TextView todayCountValue = ViewBindings.findChildViewById(rootView, id);
      if (todayCountValue == null) {
        break missingId;
      }

      id = R.id.today_malas_value;
      TextView todayMalasValue = ViewBindings.findChildViewById(rootView, id);
      if (todayMalasValue == null) {
        break missingId;
      }

      return new FragmentWritingBinding((ScrollView) rootView, actionsContainer, autoDrawButton,
          clearButton, dailyGoalValue, dailyProgressBar, drawingCard, drawingView, goalPercentage,
          instructionCard, setGoalButton, shareProgressButton, statsCard, streakCountValue,
          submitButton, todayCountValue, todayMalasValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
